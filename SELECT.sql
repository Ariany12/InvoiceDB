-- Exercise A 

SELECT ID_INVOICE, ID_ITEM, COD_PROD,VALUE_UNIT FROM INVOICE_ITEMS WHERE DISCOUNT IS NULL;

-- Exercise B 

SELECT ID_INVOICE, ID_ITEM, COD_PROD,VALUE_UNIT, (VALUE_UNIT - (VALUE_UNIT *(DISCOUNT/100))) AS SOLD_VALUE FROM INVOICE_ITEMS WHERE DISCOUNT IS NOT NULL;

-- Exercise C

UPDATE INVOICE_ITEMS SET DISCOUNT = 0 WHERE DISCOUNT IS NULL;

-- Excercise D

SELECT 
	ID_INVOICE,
    ID_ITEM,
    COD_PROD,
    VALUE_UNIT,
    QUANTITY * VALUE_UNIT AS TOTAL_VALUE,
    DISCOUNT,
    (VALUE_UNIT - (VALUE_UNIT *(DISCOUNT/100))) AS SOLD_VALUE 
FROM 
	INVOICE_ITEMS;

-- Exercise E

SELECT ID_INVOICE, SUM(QUANTITY * VALUE_UNIT) AS TOTAL_VALUE
FROM INVOICE_ITEMS 
GROUP BY ID_INVOICE 
ORDER BY SUM(QUANTITY * VALUE_UNIT) DESC;

-- Exercise F


SELECT ID_INVOICE, SUM(VALUE_UNIT - ( VALUE_UNIT *(DISCOUNT/100))) AS SOLD_VALUE
FROM INVOICE_ITEMS
GROUP BY ID_INVOICE
ORDER BY SUM(VALUE_UNIT - ( VALUE_UNIT *(DISCOUNT/100))) DESC;

-- Exercise F

Select  COD_PROD, MAX(QUANTITY)
FROM INVOICE_ITEMS
WHERE QUANTITY = MAX(QUANTITY)
GROUP BY COD_PROD;

SELECT SUM(QUANTITY) FROM INVOICE_ITEMS WHERE COD_PROD = 1 ;

SELECT * FROM information_schema.tables


    





